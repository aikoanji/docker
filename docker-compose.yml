version: "1"

services:
  ubuntu:
    container_name: ubuntu
    platform: linux/x86_64
    build: .
    command: ["sleep", "infinity"]
    # volumes:
    #   - "./backend-api:/home/ubuntu/backend-api/"
    #   - "./api-antrian:/home/ubuntu/api-antrian/"
    ports:
      - '3333:3333'
      - '9229:9229'
  
  postgres:
    container_name: postgres
    image: kartoza/postgis:14-3.2
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
    volumes:
      - ./storage:/data/postgres

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_TIMEOUT_MS: 36000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - ./storage/redis:/data
    
volumes:
  data:

networks:
  es-net:
    driver: bridge
  web:
    driver: bridge
  back-tier:
